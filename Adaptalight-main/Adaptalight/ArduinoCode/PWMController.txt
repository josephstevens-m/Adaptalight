/*
 * This is the one on the arduino as April 16 2021 
 * This is the one that is used in Phase 2 of the Experiment. 
 *This is the PWM controller for dimming the lights. It takes an input sent to it 
 *from the Raspberry Pi and uses it for PWM to dim the lights. The logic is done
 *in the RPi node node-red Adapatalight v2.1.7 in the node DimFastPWM-v2 and the code is also in PWMAdjust-flow.json 
*/
//const int ledPin = 13; // pin the LED is connected to
#define pwmPin 11
const int MaxChar = 4; // The max numbers it will recieve, must include '\n' char. So 0 to 255 needs 4 chars
     // The character array defined as the size of the max char length
int index = 0; //index used to track the data coming in. 
int pwm = 0;
int newPwm = 0;



void setup()
{
  Serial.begin(9600); // Initialize serial port to send and receive at 9600 baud
  //pinMode(ledPin, OUTPUT); // set this pin as output
  pinMode(11,OUTPUT);
}

void loop()
{
  setPwm();
// for(int i = 0;i<256;i++)
//{
//  analogWrite(pwmPin,i);
//  delay(25);
//}
  
  
  analogWrite(pwmPin,pwm);
  Serial.println(pwm);
  delay(500);

}

void setPwm()
{
  while( Serial.available()) // Check to see if at least one character is available
  {
    String  strValue;
    strValue = Serial.readStringUntil('\n'); //It will wait unitl this character comes 
    int ix = strValue.length(); //length of the string used for the index of char array
    if (ix <= MaxChar)
    {    
      char charValue[MaxChar]; //creates array size of string coming in
      strValue.toCharArray(charValue,MaxChar); //toCharArray(the target array, length of array)
      newPwm = atoi(charValue); //converting the characters to an int
      if(newPwm >= 0 && newPwm <= 255) // is this an ascii digit between 0 and 9?
      {
        pwm = newPwm;
        //Serial.println(newMmols);
        Serial.println(pwm);
        //delay(500);
        //newPWM = 0;
        ix = 0; 
      }
      else
      {
        Serial.print("NaN");
      }
    }
    else
    {
      Serial.print("Too Big");
    
    }
}
}