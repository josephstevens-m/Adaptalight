[{"id":"fd4fe1fd.0da91","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"6a19bcf1.afe234","type":"serial out","z":"fd4fe1fd.0da91","name":"","serial":"31b40f39.3e4178","x":520,"y":280,"wires":[]},{"id":"b8481cd7.0b52c","type":"serial in","z":"fd4fe1fd.0da91","name":"","serial":"31b40f39.3e4178","x":810,"y":160,"wires":[["8f2e909b.d1c3b"]]},{"id":"8f2e909b.d1c3b","type":"debug","z":"fd4fe1fd.0da91","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":970,"y":160,"wires":[]},{"id":"a12fda75.10f158","type":"mqtt in","z":"fd4fe1fd.0da91","name":"","topic":"dev/test","qos":"2","datatype":"auto","broker":"df9d8b1b.113268","x":110,"y":200,"wires":[["43d58392.a21c1c","23493402.bbfc6c"]]},{"id":"91c6b3c0.19e39","type":"function","z":"fd4fe1fd.0da91","name":"PWMAdjust","func":"obj = JSON.parse(msg.payload); //parses incoming payload to a JSON without the JSON node. \n\n//Then we use the object to assign to the variables below. \nvar mmols = obj.mmol;\n\n/*\nvar date = msg.payload.date;\nvar time = msg.payload.time;\nvar mmols = msg.payload.mmol;\n*/\n\nvar SetMmols = flow.get(\"SuperSetMmols\"); //this is the setting for the target mmols\nvar myPwm = flow.get(\"pwm\"); // This is the current setting for the pwm set inside \n\nif (mmols>SetMmols){ //if the current mmols are brighter than our setting\n    if (myPwm>=255) //Then test to make no number greater than 255 is sent\n        {\n        myPwm = 255; //If the number is larger it will send 255\n        flow.set(\"pwm\", myPwm);\n        }\n     else\n        {\n        myPwm = myPwm + 1; //if not then add one to the pwm \n        //myPwm++;\n        flow.set(\"pwm\", myPwm);\n        }\n}\n//if (mmols<SetMmols){\nelse{    \n    if (myPwm<=0)\n        {\n        myPwm = 0;\n        flow.set(\"pwm\", myPwm);\n        }\n    else{\n        myPwm = myPwm - 1;\n        //myPwm--;\n        flow.set(\"pwm\", myPwm);\n        }\n}\n\nvar newMsg = {};\nnewMsg.payload = myPwm;\n//Line below is for testing the output of the node\n//newMsg.payload = \"{\\\"pwm\\\":\"+ myPwm + \",\\\"SuperMmols\\\":\" + SetMmols + \",\\\"InMols\\\":\" + mmols +\"}\";\n\nreturn newMsg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":90,"y":320,"wires":[[]]},{"id":"32b6e116.c1312e","type":"change","z":"fd4fe1fd.0da91","name":"","rules":[{"t":"set","p":"pwm","pt":"flow","to":"128","tot":"num"},{"t":"set","p":"SuperSetMmols","pt":"flow","to":"200","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":280,"y":80,"wires":[[]]},{"id":"80b874ef.032c78","type":"inject","z":"fd4fe1fd.0da91","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":80,"y":80,"wires":[["32b6e116.c1312e"]]},{"id":"43d58392.a21c1c","type":"debug","z":"fd4fe1fd.0da91","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":500,"y":140,"wires":[]},{"id":"3ccde7e.4e55b18","type":"function","z":"fd4fe1fd.0da91","name":"FastPWM-v1","func":"obj = JSON.parse(msg.payload); //parses incoming payload to a JSON without the JSON node. \n  \n//Then we use the object to assign to the variables below. \nvar mmols = obj.mmol;\n\nvar SetMmols = flow.get(\"SuperSetMmols2\"); //this is the setting for the target mmols\nvar myPwm = flow.get(\"pwm2\"); // This is the current setting for the pwm set inside \n\nif (mmols>SetMmols)\n{ //if the current mmols are brighter than our setting\n    differingMmols = mmols - SetMmols;\n    if (myPwm<0) //if the number is less than 0 it will send 0\n        {\n        myPwm = 0; //If the number is larger it will send 0\n        flow.set(\"pwm2\", myPwm);\n        }\n    else if(differingMmols>10) //this will adjust faster\n        {// It will take every 3 pwm = 1 mmol and give a quick  adjust\n         myPwm = myPwm + 10;\n         flow.set(\"pwm2\", myPwm);\n        }\n    else //This is the normal minor adjustments. \n        {\n        myPwm = myPwm + 1; //if not then add one to the pwm \n        //myPwm++;\n        //flow.set(\"pwm\", myPwm);\n        }\n    flow.set(\"pwm2\", myPwm);\n}\n//if (mmols<SetMmols){\nelse{  // if the current mmols are dimmer than the setting\n    differingMmols = SetMmols - mmols;\n    if (myPwm>255) //Then test to make no number greater than 255 is sent\n        {\n        myPwm = 255;\n        flow.set(\"pwm2\", myPwm);\n        }\n    else if(differingMmols>10) //this will adjust faster\n        {// It will take every 3 pwm = 1 mmol and give a quick  adjust\n         myPwm = myPwm -10;\n         flow.set(\"pwm2\", myPwm);\n        }\n    else{\n        myPwm = myPwm - 1;\n        //myPwm--;\n        flow.set(\"pwm2\", myPwm);\n        }\n    flow.set(\"pwm2\", myPwm);\n}\n\nvar newMsg = {};\nnewMsg.payload = myPwm;\n//Line below is for testing the output of the node\n//newMsg.payload = \"{\\\"pwm\\\":\"+ myPwm + \",\\\"SuperMmols\\\":\" + SetMmols + \",\\\"InMols\\\":\" + mmols +\"}\";\n\nreturn newMsg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":270,"y":360,"wires":[[]]},{"id":"25a2a359.53fb8c","type":"debug","z":"fd4fe1fd.0da91","name":"Updated PWM","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":580,"y":200,"wires":[]},{"id":"5aeb022d.dd0eac","type":"function","z":"fd4fe1fd.0da91","name":"FastPWM-v0","func":"obj = JSON.parse(msg.payload); //parses incoming payload to a JSON without the JSON node. \nfunction round(value, decimals) {\n    return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n    }\n//Then we use the object to assign to the variables below. \nvar mmols = obj.mmol;\n\n/*\nvar date = msg.payload.date;\nvar time = msg.payload.time;\nvar mmols = msg.payload.mmol;\n*/\nlet differingMmols=0;\nlet tempPwmAdjust=0;\nlet roundTempPwmAdjust=0;\nvar SetMmols = flow.get(\"SuperSetMmols2\"); //this is the setting for the target mmols\nvar myPwm = flow.get(\"pwm2\"); // This is the current setting for the pwm set inside \n\nif (mmols>SetMmols){ //if the current mmols are brighter than our setting\n    differingMmols = mmols - SetMmols;\n    if (myPwm>=0) //Then test to make no number greater than 255 is sent\n        {\n        myPwm = 0; //If the number is larger it will send 255\n        flow.set(\"pwm2\", myPwm);\n        }\n    else if(differingMmols>10) //this will adjust faster\n        {// It will take every 1 pwm = 3 mmol and give a quick  adjust\n         //tempPwmAdjust = Math.round(differingMmols * 3); //this formula is off \n         //roundTempPwmAdjust = Math.round(tempPwmAdjust);\n         myPwm = myPwm +10;\n         flow.set(\"pwm2\", myPwm);\n        }\n    else //This is the normal minor adjustments. \n        {\n        myPwm = myPwm + 1; //if not then add one to the pwm \n        //myPwm++;\n        //flow.set(\"pwm\", myPwm);\n        }\n    flow.set(\"pwm2\", myPwm);\n}\n//if (mmols<SetMmols){\nelse{  // if the current mmols are dimmer than the setting\n    differingMmols = SetMmols - mmols;\n    if (myPwm<=255) //if the number is less than 0 it will send 0\n        {\n        myPwm = 255;\n       // flow.set(\"pwm\", myPwm);\n        }\n    else if(differingMmols>10) //this will adjust faster\n        {// It will take every 3 pwm = 1 mmol and give a quick  adjust\n         myPwm = myPwm -10;\n         flow.set(\"pwm2\", myPwm);\n        }\n    else{\n        myPwm = myPwm - 1;\n        //myPwm--;\n        flow.set(\"pwm2\", myPwm);\n        }\n    flow.set(\"pwm2\", myPwm);\n}\n\nvar newMsg = {};\nnewMsg.payload = myPwm;\n//Line below is for testing the output of the node\n//newMsg.payload = \"{\\\"pwm\\\":\"+ myPwm + \",\\\"SuperMmols\\\":\" + SetMmols + \",\\\"InMols\\\":\" + mmols +\"}\";\n\nreturn newMsg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":270,"y":320,"wires":[[]]},{"id":"23493402.bbfc6c","type":"function","z":"fd4fe1fd.0da91","name":"FastPWM-v2","func":"obj = JSON.parse(msg.payload); //parses incoming payload to a JSON without the JSON node.\n\n//Then we use the object to assign to the variables below.\nvar mmols = obj.mmol;\n\nvar SetMmols = flow.get(\"SuperSetMmols\"); //this is the setting for the target mmols\nvar myPwm = flow.get(\"pwm\"); // This is the current setting for the pwm set inside\nlet differingMmols = 0;\n\nif (mmols>SetMmols)\n{ //if the current mmols are brighter than our setting\n    differingMmols = mmols - SetMmols;\n    if(differingMmols>10) //this will adjust faster\n        {// It will take every 3 pwm = 1 mmol and give a quick  adjust\n          myPwm = myPwm + Math.round(differingMmols * .33);\n          flow.set(\"pwm\", myPwm);\n        }\n    else //This is the normal minor adjustments.\n        {\n          myPwm = myPwm + 1; //if not then add one to the pwm\n          flow.set(\"pwm\", myPwm);\n        }\n    if (myPwm>=255) //Then test to make no number greater than 255 is sent\n        {\n          myPwm = 255; //If the number is larger it will send 255\n          flow.set(\"pwm\", myPwm);\n        }\n}\n//if (mmols<SetMmols){\nelse{  // if the current mmols are dimmer than the setting\n    differingMmols = SetMmols - mmols;\n    if(differingMmols>10) //this will adjust faster\n        {// It will take every 3 pwm = 1 mmol and give a quick  adjust\n          myPwm = myPwm - Math.round(differingMmols * .33);\n          flow.set(\"pwm\", myPwm);\n        }\n    else{\n          myPwm = myPwm - 1;\n          flow.set(\"pwm\", myPwm);\n        }\n    if (myPwm<=0)\n        {\n          myPwm = 0;\n          flow.set(\"pwm\", myPwm);\n        }\n}\n\nvar newMsg = {};\nnewMsg.payload = myPwm;\n//Line below is for testing the output of the node\n//newMsg.payload = \"{\\\"pwm\\\":\"+ myPwm + \",\\\"SuperMmols\\\":\" + SetMmols + \",\\\"InMols\\\":\" + mmols +\"}\";\n\nreturn newMsg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":330,"y":200,"wires":[["25a2a359.53fb8c","6a19bcf1.afe234"]]},{"id":"31b40f39.3e4178","type":"serial-port","serialport":"/dev/ttyACM0","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","waitfor":"","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"\\n","bin":"false","out":"char","addchar":"","responsetimeout":"10000"},{"id":"df9d8b1b.113268","type":"mqtt-broker","name":"","broker":"192.168.0.150","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]